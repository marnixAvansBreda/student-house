// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentHouse;

namespace StudentHouse.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20181212104437_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentHouse.Models.MealEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ChefId");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("Description");

                    b.Property<int>("MaxAmountOfGuests");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.HasIndex("ChefId");

                    b.ToTable("Meals");

                    b.HasData(
                        new { Id = new Guid("e59e07df-cf1c-412c-b7b3-e216ecf1facf"), ChefId = new Guid("6f1e369b-29ce-4d43-b027-3756f03899a1"), CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)), DateTime = new DateTime(2018, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Delicious pasta from Italy!", MaxAmountOfGuests = 5, Name = "Macaroni", Price = 3.0 },
                        new { Id = new Guid("b6296516-9b2a-4f17-bc15-5e70d397051a"), ChefId = new Guid("8f6dcad1-c920-411c-9d00-c6b3a841cd88"), CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)), DateTime = new DateTime(2018, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Classic schnitzel from Germany", MaxAmountOfGuests = 5, Name = "Schnitzel", Price = 4.5 },
                        new { Id = new Guid("58067c81-ac5e-40b5-afbf-f73bc2d333e5"), ChefId = new Guid("8f6dcad1-c920-411c-9d00-c6b3a841cd88"), CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)), DateTime = new DateTime(2018, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "A Japanese dish with raw fish", MaxAmountOfGuests = 3, Name = "Sushi", Price = 5.0 }
                    );
                });

            modelBuilder.Entity("StudentHouse.Models.MealGuestEntity", b =>
                {
                    b.Property<Guid>("MealId");

                    b.Property<Guid>("GuestId");

                    b.HasKey("MealId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("MealGuestEntity");

                    b.HasData(
                        new { MealId = new Guid("e59e07df-cf1c-412c-b7b3-e216ecf1facf"), GuestId = new Guid("8f6dcad1-c920-411c-9d00-c6b3a841cd88") },
                        new { MealId = new Guid("e59e07df-cf1c-412c-b7b3-e216ecf1facf"), GuestId = new Guid("635158c3-e28e-46fd-808e-c18b1722392c") },
                        new { MealId = new Guid("b6296516-9b2a-4f17-bc15-5e70d397051a"), GuestId = new Guid("9902719d-959c-4f28-b3f9-c5c8217df377") },
                        new { MealId = new Guid("b6296516-9b2a-4f17-bc15-5e70d397051a"), GuestId = new Guid("635158c3-e28e-46fd-808e-c18b1722392c") },
                        new { MealId = new Guid("58067c81-ac5e-40b5-afbf-f73bc2d333e5"), GuestId = new Guid("9902719d-959c-4f28-b3f9-c5c8217df377") },
                        new { MealId = new Guid("58067c81-ac5e-40b5-afbf-f73bc2d333e5"), GuestId = new Guid("6f1e369b-29ce-4d43-b027-3756f03899a1") },
                        new { MealId = new Guid("58067c81-ac5e-40b5-afbf-f73bc2d333e5"), GuestId = new Guid("635158c3-e28e-46fd-808e-c18b1722392c") }
                    );
                });

            modelBuilder.Entity("StudentHouse.Models.StudentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("EMail");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new { Id = new Guid("6f1e369b-29ce-4d43-b027-3756f03899a1"), CreatedAt = new DateTimeOffset(new DateTime(2018, 12, 12, 10, 44, 37, 710, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)), EMail = "Abbey@gmail.com", Name = "Abbey", PhoneNumber = "0612345678" },
                        new { Id = new Guid("8f6dcad1-c920-411c-9d00-c6b3a841cd88"), CreatedAt = new DateTimeOffset(new DateTime(2018, 12, 12, 10, 44, 37, 711, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)), EMail = "Dolly@gmail.com", Name = "Dolly", PhoneNumber = "0613354975" },
                        new { Id = new Guid("635158c3-e28e-46fd-808e-c18b1722392c"), CreatedAt = new DateTimeOffset(new DateTime(2018, 12, 12, 10, 44, 37, 711, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)), EMail = "Twila@gmail.com", Name = "Twila", PhoneNumber = "0632164994" },
                        new { Id = new Guid("9902719d-959c-4f28-b3f9-c5c8217df377"), CreatedAt = new DateTimeOffset(new DateTime(2018, 12, 12, 10, 44, 37, 711, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)), EMail = "Ahmad@gmail.com", Name = "Ahmad", PhoneNumber = "0634986134" }
                    );
                });

            modelBuilder.Entity("StudentHouse.Models.MealEntity", b =>
                {
                    b.HasOne("StudentHouse.Models.StudentEntity", "Chef")
                        .WithMany("MealsAsChef")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentHouse.Models.MealGuestEntity", b =>
                {
                    b.HasOne("StudentHouse.Models.StudentEntity", "Guest")
                        .WithMany("MealsAsGuest")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentHouse.Models.MealEntity", "Meal")
                        .WithMany("Guests")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
